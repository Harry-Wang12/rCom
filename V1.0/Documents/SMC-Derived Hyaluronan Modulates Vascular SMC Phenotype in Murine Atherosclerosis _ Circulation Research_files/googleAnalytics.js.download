




var GoogleAnalyticsObject = "GoogleAnalyticsObject";
var gaName = "ga_new";



var gaURL = '//www.google-analytics.com/analytics.js';


var protocol = window.location.protocol;
if (protocol.indexOf('http') !== 0) {
	gaURL = "https:"+gaURL;
}


(function initGA(GoogleAnalyticsObject,window, document, tagName, gaURL, gaName, scriptElement, insertBeforeElement) {

	window[GoogleAnalyticsObject] = gaName;
	window[gaName] = window[gaName] || function () {
		(window[gaName].q = window[gaName].q || []).push(arguments)
	};
	window[gaName].l = new Date().getTime();
	scriptElement = document.createElement(tagName);

	insertBeforeElement = document.getElementsByTagName(tagName)[0];
	//scriptElement.async = 1;
	scriptElement.src = gaURL;

	scriptElement.onload = function(evt){

	};

	scriptElement.onerror = function(evt){

	};


	insertBeforeElement.parentNode.insertBefore(scriptElement, insertBeforeElement);

	var ga = window[gaName];

	ga('create','UA-136762377-1','auto');
	ga('require', 'displayfeatures');

	ga(function(tracker) {
		// Grab a reference to the default sendHitTask function.
		var originalSendHitTask = tracker.get('sendHitTask');
		var checkOriginalCheckProtocolTask = tracker.get('checkProtocolTask');
		tracker.set('checkProtocolTask', function(model){
			try {
				const ret = checkOriginalCheckProtocolTask(model);
			}catch (e) {
				console.log(e);
			}
			return true;
		});

		// Modifies sendHitTask to send a copy of the request to a local server after
		// sending the normal request to www.google-analytics.com/collect.
		tracker.set('sendHitTask', function(model) {
			originalSendHitTask(model);
			
		});
	});




})(GoogleAnalyticsObject,window,document,'script',gaURL,gaName);



